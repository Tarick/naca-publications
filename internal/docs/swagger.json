{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "this application provides API for Publications",
    "title": "Publications API.",
    "termsOfService": "None, early alpha",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/license/MIT"
    },
    "version": "0.0.1"
  },
  "host": "localhost:8080",
  "paths": {
    "/feeds": {
      "get": {
        "description": "Returns all feeds registered in db",
        "operationId": "getFeeds",
        "responses": {
          "200": {
            "description": "list all feeds",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedResponseBody"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates feed using supplied params from body",
        "operationId": "createFeed",
        "parameters": [
          {
            "$ref": "#/definitions/Feed"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/FeedResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/feeds/{publication_uuid}": {
      "get": {
        "description": "Gets single feed using its publication_uuid as parameter",
        "operationId": "getFeed",
        "parameters": [
          {
            "type": "string",
            "description": "feed publication_uuid to get",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FeedResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      },
      "put": {
        "description": "Modifies feed using supplied params from body",
        "operationId": "updateFeed",
        "parameters": [
          {
            "type": "string",
            "description": "Feed publication_uuid to update",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/definitions/Feed"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/FeedResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      },
      "delete": {
        "description": "Deletes feed using its publication_uuid",
        "operationId": "deleteFeed",
        "parameters": [
          {
            "type": "string",
            "description": "Feed publication_uuid to update",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Send success"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publications": {
      "get": {
        "description": "Returns all publications registered in db",
        "operationId": "getPublications",
        "responses": {
          "200": {
            "description": "list all publications",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublicationResponseBody"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates publication using supplied params from body",
        "operationId": "createPublication",
        "parameters": [
          {
            "$ref": "#/definitions/Publication"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/PublicationResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publications/{publication_uuid}": {
      "get": {
        "description": "Gets single publication using its publication_uuid as parameter",
        "operationId": "getPublication",
        "parameters": [
          {
            "type": "string",
            "description": "publication_uuid to get",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PublicationResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      },
      "put": {
        "description": "Modifies Publication using supplied params from body",
        "operationId": "updatePublication",
        "parameters": [
          {
            "type": "string",
            "description": "Publication publication_uuid to update",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/definitions/Publication"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PublicationResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      },
      "delete": {
        "description": "Deletes publication using its uuid",
        "operationId": "deletePublication",
        "parameters": [
          {
            "type": "string",
            "description": "Publication uuid to delete",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Send success"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publishers": {
      "get": {
        "description": "Returns all publishers registered in db",
        "operationId": "getPublishers",
        "responses": {
          "200": {
            "description": "list all publishers",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PublisherResponseBody"
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates publisher using supplied params from body",
        "operationId": "createPublisher",
        "parameters": [
          {
            "$ref": "#/definitions/Publisher"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/PublisherResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publishers/{publication_uuid}": {
      "put": {
        "description": "Modifies Publisher using supplied params from body",
        "operationId": "updatePublisher",
        "parameters": [
          {
            "type": "string",
            "description": "Publisher publisher_uuid to update",
            "name": "publisher_uuid",
            "in": "path",
            "required": true
          },
          {
            "$ref": "#/definitions/Publisher"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PublisherResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      },
      "delete": {
        "description": "Deletes publisher using its uuid",
        "operationId": "deletePublisher",
        "parameters": [
          {
            "type": "string",
            "description": "Publisher uuid to delete",
            "name": "publisher_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Send success"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publishers/{publisher_uuid}": {
      "get": {
        "description": "Gets single publisher using its publisher_uuid as parameter",
        "operationId": "getPublisher",
        "parameters": [
          {
            "type": "string",
            "description": "publisher_uuid to get",
            "name": "publisher_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PublisherResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/publishers/{publisher_uuid}/publications": {
      "get": {
        "description": "Get publisher publications",
        "operationId": "getPublisherPublications",
        "parameters": [
          {
            "type": "string",
            "description": "publisher_uuid",
            "name": "publisher_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/PublicationsResponse"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    },
    "/refreshFeeds": {
      "put": {
        "description": "Triggers refresh (pull of content) for all feeds",
        "operationId": "refreshFeeds",
        "responses": {
          "204": {
            "description": "Send success"
          },
          "default": {
            "description": "Error payload",
            "schema": {
              "$ref": "#/responses/ErrResponse"
            }
          }
        }
      }
    },
    "/refreshFeeds/{publication_uuid}": {
      "put": {
        "description": "Triggers refresh (pull of content) for single feeds",
        "operationId": "refreshFeed",
        "parameters": [
          {
            "type": "integer",
            "description": "Feed publication_uuid to update",
            "name": "publication_uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Send success"
          },
          "default": {
            "$ref": "#/responses/ErrResponse"
          }
        }
      }
    }
  },
  "definitions": {
    "ErrResponseBody": {
      "description": "ErrResponseBody is readable output to application/human about error",
      "type": "object",
      "properties": {
        "error": {
          "description": "application-level error message, for debugging",
          "type": "string",
          "x-go-name": "ErrorText"
        },
        "status": {
          "description": "user-level status message",
          "type": "string",
          "x-go-name": "StatusText"
        }
      },
      "x-go-package": "github.com/Tarick/naca/rss-feeds/internal/application/server"
    },
    "Feed": {
      "description": "Feed defines minimal feed type",
      "type": "object",
      "properties": {
        "publication_uuid": {
          "$ref": "#/definitions/UUID"
        },
        "url": {
          "description": "URL of the feed\nTODO: separate type, validation (value object)",
          "type": "string",
          "x-go-name": "URL"
        }
      },
      "x-go-package": "github.com/Tarick/naca/rss-feeds/internal/entity"
    },
    "FeedResponseBody": {
      "title": "FeedResponseBody is returned on successfull operations to get, create or delete feed.",
      "allOf": [
        {
          "$ref": "#/definitions/Feed"
        }
      ],
      "x-go-package": "github.com/Tarick/naca/rss-feeds/internal/application/server"
    },
    "Publication": {
      "description": "Publication defines minimal publication type",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "language_code": {
          "type": "string",
          "x-go-name": "LanguageCode"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "publication_type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "publisher_uuid": {
          "$ref": "#/definitions/UUID"
        },
        "uuid": {
          "$ref": "#/definitions/UUID"
        }
      },
      "x-go-package": "publications/internal/entity"
    },
    "PublicationResponseBody": {
      "title": "PublicationResponseBody is returned on successfull operations to get, create publication.",
      "allOf": [
        {
          "$ref": "#/definitions/Publication"
        }
      ],
      "x-go-package": "publications/internal/application/server"
    },
    "Publisher": {
      "description": "Publisher defines minimal publisher type",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "url": {
          "type": "string",
          "x-go-name": "URL"
        },
        "uuid": {
          "$ref": "#/definitions/UUID"
        }
      },
      "x-go-package": "publications/internal/entity"
    },
    "PublisherResponseBody": {
      "title": "PublisherResponseBody is returned on successfull operations to get, create publisher.",
      "allOf": [
        {
          "$ref": "#/definitions/Publisher"
        }
      ],
      "x-go-package": "publications/internal/application/server"
    },
    "UUID": {
      "type": "array",
      "title": "UUID is an array type to represent the value of a UUID, as defined in RFC-4122.",
      "items": {
        "type": "integer",
        "format": "uint8"
      },
      "x-go-package": "github.com/gofrs/uuid"
    }
  },
  "responses": {
    "ErrResponse": {
      "description": "ErrResponse renderer type for handling all sorts of errors.",
      "schema": {
        "$ref": "#/definitions/ErrResponseBody"
      }
    },
    "FeedResponse": {
      "description": "FeedResponse defines Feed response with Body and any additional headers",
      "schema": {
        "$ref": "#/definitions/FeedResponseBody"
      }
    },
    "PublicationResponse": {
      "description": "PublicationResponse defines response with data body and any additional headers",
      "schema": {
        "$ref": "#/definitions/PublicationResponseBody"
      }
    },
    "PublisherResponse": {
      "description": "PublisherResponse defines Feed response with Body and any additional headers",
      "schema": {
        "$ref": "#/definitions/PublisherResponseBody"
      }
    }
  }
}